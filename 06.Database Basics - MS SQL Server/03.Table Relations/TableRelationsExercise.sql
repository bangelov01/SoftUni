CREATE DATABASE Example

USE Example

--ONE TO ONE
CREATE TABLE Passports (
	PassportID INT NOT NULL,
	PassportNumber NVARCHAR(50) NOT NULL
)

CREATE TABLE Persons (
	PersonID INT NOT NULL,
	FirstName VARCHAR(20) NOT NULL,
	Salary DECIMAL(7,2) NOT NULL,
	PassportID INT NOT NULL
)

INSERT INTO Passports
	VALUES
		(101, 'N34FG21B'),
		(102, 'K65LO4R7'),
		(103, 'ZE657QP2')


INSERT INTO Persons
	VALUES
		(1, 'Roberto', 43300.00, 102),
		(2, 'Tom', 56100.00, 103),
		(3, 'Yana', 60200.00, 101)

ALTER TABLE Persons
ADD CONSTRAINT PK_PersonID PRIMARY KEY (PersonID)

ALTER TABLE Passports
ADD CONSTRAINT PK_PassportID PRIMARY KEY (PassportID)

ALTER TABLE Persons
ADD CONSTRAINT FK_PersonsPassports FOREIGN KEY (PassportID) REFERENCES Passports(PassportID)

ALTER TABLE Persons
ADD UNIQUE (PassportID)

--ONE TO MANY

CREATE TABLE Manufacturers (
	ManufacturerID INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
	EstablishedOn DATETIME2
)

CREATE TABLE Models (
	ModelID INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
	ManufacturerID INT NOT NULL
)

INSERT INTO Manufacturers
	VALUES
		(1, 'BMW', '07/03/1916'),
		(2, 'Tesla', '01/01/2003'),
		(3, 'Lada', '01/05/1966')

INSERT INTO Models
	VALUES
		(101, 'X1', 1),
		(102, 'i6', 1),
		(103, 'Model S', 2),
		(104, 'Model X', 2),
		(105, 'Model 3', 2),
		(106, 'Nova', 3)

ALTER TABLE Models
ADD PRIMARY KEY (ModelID)

ALTER TABLE Manufacturers
ADD PRIMARY KEY (ManufacturerID)

ALTER TABLE Models
ADD FOREIGN KEY (ManufacturerID) REFERENCES Manufacturers(ManufacturerID)

--MANY TO MANY

CREATE TABLE Students (
	StudentID INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
)

CREATE TABLE Exams (
	ExamID INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
)

CREATE TABLE StudentsExams (
	StudentID INT NOT NULL,
	ExamID INT NOT NULL
)

INSERT INTO Students
	VALUES
		(1, 'Mila'),
		(2, 'Toni'),
		(3, 'Ron')

INSERT INTO Exams
	VALUES
		(101, 'SpringMVC'),
		(102, 'Neo4j'),
		(103, 'Oracle 11g')

INSERT INTO StudentsExams
	VALUES
	(1, 101),
	(1, 102),
	(2, 101),
	(3, 103),
	(2, 102),
	(2, 103)

ALTER TABLE Students
ADD PRIMARY KEY (StudentID)

ALTER TABLE Exams
ADD PRIMARY KEY (ExamID)

ALTER TABLE StudentsExams
ADD PRIMARY KEY (StudentID, ExamID)

ALTER TABLE StudentsExams
ADD FOREIGN KEY (StudentID) REFERENCES Students(StudentID)

ALTER TABLE StudentsExams
ADD FOREIGN KEY (ExamID) REFERENCES Exams(ExamID)

--SELF REFERENCING

CREATE TABLE Teachers (
	TeacherID INT NOT NULL,
	[Name] VARCHAR(30) NOT NULL,
	ManagerID INT
)

INSERT INTO Teachers
	VALUES
		(101, 'John', NULL),
		(102, 'Maya', 106),
		(103, 'Silvia', 106),
		(104, 'Ted', 105),
		(105, 'Mark', 101),
		(106, 'Greta', 101)

ALTER TABLE Teachers
ADD PRIMARY KEY (TeacherID)

ALTER TABLE Teachers
ADD FOREIGN KEY (ManagerID) REFERENCES Teachers(TeacherID)

--CREATE ONLINE STORE DB SIMPLE EXAMPLE

CREATE DATABASE [OnlineStore]

USE [OnlineStore]

CREATE TABLE Cities (
	CityID INT PRIMARY KEY IDENTITY NOT NULL,
	[Name] VARCHAR(50) NOT NULL
)

CREATE TABLE ItemTypes (
	ItemTypeID INT PRIMARY KEY IDENTITY NOT NULL,
	[Name] VARCHAR(50) NOT NULL
)

CREATE TABLE Customers (
	CustomerID INT PRIMARY KEY IDENTITY NOT NULL,
	[Name] VARCHAR(50) NOT NULL,
	Birthday DATETIME2 NOT NULL,
	CityID INT FOREIGN KEY REFERENCES Cities(CityID) NOT NULL
)

CREATE TABLE Items (
	ItemID INT PRIMARY KEY IDENTITY NOT NULL,
	[Name] VARCHAR(50) NOT NULL,
	ItemTypeID INT FOREIGN KEY REFERENCES ItemTypes(ItemTypeID) NOT NULL
)

CREATE TABLE Orders (
	OrderID INT PRIMARY KEY IDENTITY NOT NULL,
	CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID) NOT NULL
)

CREATE TABLE OrderItems (
	OrderID INT NOT NULL,
	ItemID INT NOT NULL,
	CONSTRAINT PK_OrderItems
	PRIMARY KEY (OrderID, ItemID),
	CONSTRAINT FK_OrderItems_Orders
	FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
	CONSTRAINT FK_OrderItems_Items
	FOREIGN KEY (ItemID) REFERENCES Items(ItemID)
)

-- CREATE UNIVERSITY DB

CREATE DATABASE University

USE University

CREATE TABLE Majors (
	MajorID INT PRIMARY KEY IDENTITY NOT NULL,
	[Name] VARCHAR(30) NOT NULL,
)

CREATE TABLE Students (
	StudentID INT PRIMARY KEY IDENTITY NOT NULL,
	StudentNumber INT NOT NULL,
	StudentName VARCHAR(50) NOT NULL,
	MajorID INT FOREIGN KEY REFERENCES Majors(MajorID) NOT NULL
)

CREATE TABLE Payments (
	PaymentID INT PRIMARY KEY IDENTITY NOT NULL,
	PaymentDate DATETIME2 NOT NULL,
	PaymentAmount DECIMAL (6,2) NOT NULL,
	StudentID INT FOREIGN KEY REFERENCES Students(StudentID)
)

CREATE TABLE Subjects (
	SubjectID INT PRIMARY KEY IDENTITY NOT NULL,
	SubjectName VARCHAR(50) NOT NULL,
)

CREATE TABLE Agenda (
	StudentID INT,
	SubjectID INT,
	CONSTRAINT PK_Agenda
	PRIMARY KEY (StudentID, SubjectID),
	CONSTRAINT FK_Student_Agenda
	FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
	CONSTRAINT FK_Subject_Agenda
	FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID)
)

--SIMPLE JOIN

USE [Geography]

SELECT m.MountainRange
	,p.PeakName
	,p.Elevation
FROM Mountains AS m
	INNER JOIN Peaks AS p
		ON m.Id = p.MountainId
WHERE m.Id = 17
ORDER BY p.Elevation DESC